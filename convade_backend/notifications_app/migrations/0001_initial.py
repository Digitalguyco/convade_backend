# Generated by Django 5.2.1 on 2025-05-24 01:53

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('tests', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('test_reminder', 'Test Reminder'), ('test_result', 'Test Result'), ('course_update', 'Course Update'), ('enrollment', 'Enrollment'), ('badge_earned', 'Badge Earned'), ('assignment_due', 'Assignment Due'), ('system_alert', 'System Alert'), ('welcome', 'Welcome')], max_length=30)),
                ('template_type', models.CharField(choices=[('email', 'Email'), ('push', 'Push Notification'), ('sms', 'SMS'), ('in_app', 'In-App Notification')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('html_body', models.TextField(blank=True, null=True)),
                ('variables', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False)),
                ('send_immediately', models.BooleanField(default=True)),
                ('delay_minutes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notifications_template',
                'ordering': ['category', 'name'],
                'unique_together': {('category', 'template_type')},
            },
        ),
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('target_criteria', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('target_users', models.ManyToManyField(blank=True, related_name='notification_batches', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications_app.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Notification Batch',
                'verbose_name_plural': 'Notification Batches',
                'db_table': 'notifications_batch',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('html_message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('action_url', models.URLField(blank=True, null=True)),
                ('action_text', models.CharField(blank=True, max_length=100, null=True)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('attempt_count', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tests.test')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications_app.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('in_app_notifications', models.BooleanField(default=True)),
                ('test_reminders', models.BooleanField(default=True)),
                ('test_results', models.BooleanField(default=True)),
                ('course_updates', models.BooleanField(default=True)),
                ('enrollment_notifications', models.BooleanField(default=True)),
                ('badge_notifications', models.BooleanField(default=True)),
                ('assignment_reminders', models.BooleanField(default=True)),
                ('system_alerts', models.BooleanField(default=True)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(default='22:00')),
                ('quiet_hours_end', models.TimeField(default='08:00')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='immediate', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Notification Settings',
                'verbose_name_plural': 'User Notification Settings',
                'db_table': 'notifications_user_settings',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('push', 'Push'), ('sms', 'SMS'), ('in_app', 'In-App')], max_length=20)),
                ('delivery_status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('rejected', 'Rejected')], max_length=20)),
                ('recipient_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('recipient_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('device_token', models.TextField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=200, null=True)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('error_code', models.CharField(blank=True, max_length=50, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='notifications_app.notification')),
            ],
            options={
                'verbose_name': 'Notification Delivery Log',
                'verbose_name_plural': 'Notification Delivery Logs',
                'db_table': 'notifications_delivery_log',
                'ordering': ['-attempted_at'],
                'indexes': [models.Index(fields=['notification', 'delivery_method'], name='notificatio_notific_6d2522_idx'), models.Index(fields=['delivery_status'], name='notificatio_deliver_ff199e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_e285de_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at'], name='notificatio_schedul_21ac35_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_46ad24_idx'),
        ),
    ]
