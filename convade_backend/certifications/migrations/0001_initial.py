# Generated by Django 5.2.1 on 2025-05-24 01:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('tests', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('certificate_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('certificate_type', models.CharField(choices=[('course_completion', 'Course Completion'), ('test_achievement', 'Test Achievement'), ('skill_certification', 'Skill Certification'), ('participation', 'Participation')], max_length=30)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('issued', 'Issued'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('completion_date', models.DateField()),
                ('achievement_data', models.JSONField(blank=True, default=dict)),
                ('issuer_name', models.CharField(max_length=200)),
                ('issuer_title', models.CharField(blank=True, max_length=100, null=True)),
                ('institution_name', models.CharField(max_length=200)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('verification_code', models.CharField(db_index=True, max_length=100, unique=True)),
                ('digital_signature', models.TextField(blank=True, null=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/issued/%Y/%m/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='certificates/thumbnails/%Y/%m/')),
                ('is_public', models.BooleanField(default=False)),
                ('allow_sharing', models.BooleanField(default=True)),
                ('share_on_social', models.BooleanField(default=False)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('revocation_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_certificates', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='courses.course')),
                ('enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='courses.enrollment')),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_certificates', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to=settings.AUTH_USER_MODEL)),
                ('revoked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_certificates', to=settings.AUTH_USER_MODEL)),
                ('test_result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='tests.testresult')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
                'db_table': 'certifications_certificate',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CertificateTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('template_type', models.CharField(choices=[('course_completion', 'Course Completion'), ('test_achievement', 'Test Achievement'), ('skill_certification', 'Skill Certification'), ('participation', 'Participation')], max_length=30)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('image', 'Image (PNG/JPG)'), ('html', 'HTML')], default='pdf', max_length=10)),
                ('template_file', models.FileField(blank=True, null=True, upload_to='certificates/templates/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'html', 'png', 'jpg', 'jpeg'])])),
                ('html_template', models.TextField(blank=True, null=True)),
                ('css_styles', models.TextField(blank=True, null=True)),
                ('layout_config', models.JSONField(blank=True, default=dict)),
                ('available_variables', models.JSONField(blank=True, default=list)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='certificates/logos/')),
                ('signature_image', models.ImageField(blank=True, null=True, upload_to='certificates/signatures/')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='certificates/backgrounds/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('require_approval', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_certificate_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Certificate Template',
                'verbose_name_plural': 'Certificate Templates',
                'db_table': 'certifications_template',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CertificateIssuance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('issuance_type', models.CharField(choices=[('individual', 'Individual'), ('batch', 'Batch'), ('automatic', 'Automatic')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('batch_name', models.CharField(blank=True, max_length=200, null=True)),
                ('total_certificates', models.PositiveIntegerField(default=0)),
                ('successful_issuances', models.PositiveIntegerField(default=0)),
                ('failed_issuances', models.PositiveIntegerField(default=0)),
                ('target_criteria', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_log', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('certificates', models.ManyToManyField(blank=True, related_name='issuance_events', to='certifications.certificate')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='certificate_issuances', to='courses.course')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_issuances', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuances', to='certifications.certificatetemplate')),
            ],
            options={
                'verbose_name': 'Certificate Issuance',
                'verbose_name_plural': 'Certificate Issuances',
                'db_table': 'certifications_issuance',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='certificate',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='certifications.certificatetemplate'),
        ),
        migrations.CreateModel(
            name='CertificateVerification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('verification_method', models.CharField(choices=[('code_lookup', 'Code Lookup'), ('qr_scan', 'QR Code Scan'), ('url_access', 'URL Access'), ('api_request', 'API Request')], max_length=20)),
                ('verification_result', models.CharField(choices=[('valid', 'Valid'), ('invalid', 'Invalid'), ('expired', 'Expired'), ('revoked', 'Revoked'), ('not_found', 'Not Found')], max_length=20)),
                ('query_value', models.CharField(max_length=200)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('verified_at', models.DateTimeField(auto_now_add=True)),
                ('certificate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='verification_attempts', to='certifications.certificate')),
            ],
            options={
                'verbose_name': 'Certificate Verification',
                'verbose_name_plural': 'Certificate Verifications',
                'db_table': 'certifications_verification',
                'ordering': ['-verified_at'],
            },
        ),
        migrations.CreateModel(
            name='CertificateShare',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('platform', models.CharField(choices=[('linkedin', 'LinkedIn'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('email', 'Email'), ('direct_link', 'Direct Link'), ('download', 'Download')], max_length=20)),
                ('recipient_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='certifications.certificate')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificate_shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Certificate Share',
                'verbose_name_plural': 'Certificate Shares',
                'db_table': 'certifications_share',
                'ordering': ['-shared_at'],
                'indexes': [models.Index(fields=['certificate', 'shared_at'], name='certificati_certifi_e407ea_idx'), models.Index(fields=['platform'], name='certificati_platfor_54b348_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='certificatetemplate',
            index=models.Index(fields=['template_type', 'is_active'], name='certificati_templat_183fc5_idx'),
        ),
        migrations.AddIndex(
            model_name='certificateissuance',
            index=models.Index(fields=['status', 'created_at'], name='certificati_status_c7a493_idx'),
        ),
        migrations.AddIndex(
            model_name='certificateissuance',
            index=models.Index(fields=['course'], name='certificati_course__07a50b_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['recipient', 'status'], name='certificati_recipie_eeaaac_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['certificate_number'], name='certificati_certifi_a6797e_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['verification_code'], name='certificati_verific_b3d402_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['course'], name='certificati_course__23d012_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['issue_date'], name='certificati_issue_d_09a975_idx'),
        ),
        migrations.AddIndex(
            model_name='certificateverification',
            index=models.Index(fields=['certificate', 'verified_at'], name='certificati_certifi_217a78_idx'),
        ),
        migrations.AddIndex(
            model_name='certificateverification',
            index=models.Index(fields=['verification_result'], name='certificati_verific_9129a8_idx'),
        ),
        migrations.AddIndex(
            model_name='certificateverification',
            index=models.Index(fields=['query_value'], name='certificati_query_v_2da468_idx'),
        ),
    ]
