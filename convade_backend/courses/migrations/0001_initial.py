# Generated by Django 5.2.1 on 2025-05-24 01:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'courses_category',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('lesson_type', models.CharField(choices=[('video', 'Video'), ('text', 'Text/Article'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('download', 'Downloadable Resource'), ('live_session', 'Live Session')], default='text', max_length=20)),
                ('content', models.TextField(blank=True, null=True)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='courses/lessons/videos/%Y/%m/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='courses/lessons/files/%Y/%m/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('is_free_preview', models.BooleanField(default=False)),
                ('duration', models.PositiveIntegerField(default=10, help_text='Duration in minutes')),
                ('live_session_date', models.DateTimeField(blank=True, null=True)),
                ('live_session_url', models.URLField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'db_table': 'courses_lesson',
                'ordering': ['module', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(max_length=500)),
                ('course_code', models.CharField(db_index=True, max_length=20, unique=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='courses/thumbnails/%Y/%m/')),
                ('intro_video', models.FileField(blank=True, null=True, upload_to='courses/videos/%Y/%m/')),
                ('syllabus', models.FileField(blank=True, null=True, upload_to='courses/syllabi/%Y/%m/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('is_free', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('estimated_duration', models.PositiveIntegerField(help_text='Estimated duration in hours', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('enrollment_start', models.DateTimeField(blank=True, null=True)),
                ('enrollment_end', models.DateTimeField(blank=True, null=True)),
                ('max_students', models.PositiveIntegerField(default=100)),
                ('allow_self_enrollment', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('required_materials', models.TextField(blank=True, null=True)),
                ('learning_objectives', models.JSONField(blank=True, default=list)),
                ('passing_score', models.PositiveIntegerField(default=70, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('certificate_enabled', models.BooleanField(default=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('enrollment_count', models.PositiveIntegerField(default=0)),
                ('completion_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.category')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taught_courses', to=settings.AUTH_USER_MODEL)),
                ('prerequisites', models.ManyToManyField(blank=True, to='courses.course')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='accounts.school')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'db_table': 'courses_course',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_urgent', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('send_email', models.BooleanField(default=False)),
                ('target_all_students', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to=settings.AUTH_USER_MODEL)),
                ('target_students', models.ManyToManyField(blank=True, related_name='targeted_announcements', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='courses.course')),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'db_table': 'courses_announcement',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('current_grade', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_study_time', models.PositiveIntegerField(default=0)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('certificate_date', models.DateTimeField(blank=True, null=True)),
                ('payment_completed', models.BooleanField(default=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enrollment',
                'verbose_name_plural': 'Enrollments',
                'db_table': 'courses_enrollment',
                'ordering': ['-enrollment_date'],
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('watch_time', models.PositiveIntegerField(default=0)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_bookmarked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to='courses.enrollment')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='courses.lesson')),
            ],
            options={
                'verbose_name': 'Lesson Progress',
                'verbose_name_plural': 'Lesson Progress',
                'db_table': 'courses_lesson_progress',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('estimated_duration', models.PositiveIntegerField(default=60, help_text='Estimated duration in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course')),
                ('unlock_after', models.ForeignKey(blank=True, help_text='Module that must be completed before this one', null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.module')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'db_table': 'courses_module',
                'ordering': ['course', 'order'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.module'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_code'], name='courses_cou_course__897db7_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['status'], name='courses_cou_status_158bbf_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['category'], name='courses_cou_categor_108713_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['instructor'], name='courses_cou_instruc_d2e347_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['published_at'], name='courses_cou_publish_2f46d3_idx'),
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['course', '-created_at'], name='courses_ann_course__bc71f5_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['student', 'status'], name='courses_enr_student_c86bf5_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['course', 'status'], name='courses_enr_course__78d524_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['enrollment_date'], name='courses_enr_enrollm_eb8905_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('student', 'course')},
        ),
        migrations.AddIndex(
            model_name='lessonprogress',
            index=models.Index(fields=['enrollment', 'status'], name='courses_les_enrollm_1a4886_idx'),
        ),
        migrations.AddIndex(
            model_name='lessonprogress',
            index=models.Index(fields=['lesson'], name='courses_les_lesson__75c4cd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lessonprogress',
            unique_together={('enrollment', 'lesson')},
        ),
        migrations.AddIndex(
            model_name='module',
            index=models.Index(fields=['course', 'order'], name='courses_mod_course__20183c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together={('course', 'order')},
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['module', 'order'], name='courses_les_module__4accd4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('module', 'order')},
        ),
    ]
