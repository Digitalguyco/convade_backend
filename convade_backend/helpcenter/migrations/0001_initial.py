# Generated by Django 5.2.1 on 2025-05-24 01:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HelpCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_help_categories', to=settings.AUTH_USER_MODEL)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='helpcenter.helpcategory')),
            ],
            options={
                'verbose_name': 'Help Category',
                'verbose_name_plural': 'Help Categories',
                'db_table': 'helpcenter_category',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('summary', models.CharField(blank=True, max_length=500, null=True)),
                ('content', models.TextField()),
                ('article_type', models.CharField(choices=[('guide', 'Guide'), ('tutorial', 'Tutorial'), ('faq', 'FAQ'), ('troubleshooting', 'Troubleshooting'), ('feature_overview', 'Feature Overview')], default='guide', max_length=30)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived'), ('under_review', 'Under Review')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=500, null=True)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('target_audience', models.JSONField(blank=True, default=list)),
                ('estimated_read_time', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
                ('not_helpful_votes', models.PositiveIntegerField(default=0)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='help/images/%Y/%m/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('last_reviewed_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_articles', to=settings.AUTH_USER_MODEL)),
                ('contributors', models.ManyToManyField(blank=True, related_name='contributed_articles', to=settings.AUTH_USER_MODEL)),
                ('related_articles', models.ManyToManyField(blank=True, to='helpcenter.article')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='helpcenter.helpcategory')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'db_table': 'helpcenter_article',
                'ordering': ['-is_pinned', '-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HelpSearch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.CharField(max_length=500)),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('clicked_results', models.JSONField(blank=True, default=list)),
                ('was_helpful', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='help_searches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Help Search',
                'verbose_name_plural': 'Help Searches',
                'db_table': 'helpcenter_search',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('is_public', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='knowledge_bases', to='helpcenter.helpcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_knowledge_bases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Knowledge Base',
                'verbose_name_plural': 'Knowledge Bases',
                'db_table': 'helpcenter_knowledge_base',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_number', models.CharField(db_index=True, max_length=20, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('technical_issue', 'Technical Issue'), ('account_issue', 'Account Issue'), ('course_related', 'Course Related'), ('payment_issue', 'Payment Issue'), ('feature_request', 'Feature Request'), ('general_inquiry', 'General Inquiry'), ('bug_report', 'Bug Report')], max_length=30)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('waiting_for_user', 'Waiting for User'), ('waiting_for_staff', 'Waiting for Staff'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=25)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('system_info', models.JSONField(blank=True, default=dict)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('resolution', models.TextField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('satisfaction_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('satisfaction_feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_response_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Support Ticket',
                'verbose_name_plural': 'Support Tickets',
                'db_table': 'helpcenter_support_ticket',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('user_message', 'User Message'), ('staff_reply', 'Staff Reply'), ('system_note', 'System Note'), ('status_change', 'Status Change')], max_length=20)),
                ('content', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_messages', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='helpcenter.supportticket')),
            ],
            options={
                'verbose_name': 'Ticket Message',
                'verbose_name_plural': 'Ticket Messages',
                'db_table': 'helpcenter_ticket_message',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type', models.CharField(choices=[('article', 'Article'), ('faq', 'FAQ')], max_length=20)),
                ('content_id', models.UUIDField()),
                ('is_helpful', models.BooleanField()),
                ('feedback', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Content Rating',
                'verbose_name_plural': 'Content Ratings',
                'db_table': 'helpcenter_content_rating',
                'indexes': [models.Index(fields=['content_type', 'content_id'], name='helpcenter__content_9b8ca7_idx')],
                'unique_together': {('content_type', 'content_id', 'user')},
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=500)),
                ('answer', models.TextField()),
                ('tags', models.JSONField(blank=True, default=list)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
                ('not_helpful_votes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_faqs', to=settings.AUTH_USER_MODEL)),
                ('related_articles', models.ManyToManyField(blank=True, related_name='related_faqs', to='helpcenter.article')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='helpcenter.helpcategory')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'db_table': 'helpcenter_faq',
                'ordering': ['sort_order', '-created_at'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='helpcenter__categor_f6d76a_idx'), models.Index(fields=['is_featured'], name='helpcenter__is_feat_d0baa3_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['category', 'status'], name='helpcenter__categor_ddea51_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', 'published_at'], name='helpcenter__status_d6317c_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['is_featured'], name='helpcenter__is_feat_b6cd64_idx'),
        ),
        migrations.AddIndex(
            model_name='helpsearch',
            index=models.Index(fields=['query'], name='helpcenter__query_c46871_idx'),
        ),
        migrations.AddIndex(
            model_name='helpsearch',
            index=models.Index(fields=['created_at'], name='helpcenter__created_ed8cd1_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['ticket_number'], name='helpcenter__ticket__cac74d_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['requester', 'status'], name='helpcenter__request_adaaed_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['assigned_to', 'status'], name='helpcenter__assigne_2e7afd_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['status', 'priority'], name='helpcenter__status_e85671_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['created_at'], name='helpcenter__created_3f5520_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketmessage',
            index=models.Index(fields=['ticket', 'created_at'], name='helpcenter__ticket__b43f4a_idx'),
        ),
    ]
