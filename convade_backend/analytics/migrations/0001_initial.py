# Generated by Django 5.2.1 on 2025-05-24 01:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('tests', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_enrollments', models.PositiveIntegerField(default=0)),
                ('active_enrollments', models.PositiveIntegerField(default=0)),
                ('completed_enrollments', models.PositiveIntegerField(default=0)),
                ('dropped_enrollments', models.PositiveIntegerField(default=0)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('average_session_duration', models.PositiveIntegerField(default=0)),
                ('total_study_time', models.PositiveIntegerField(default=0)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_completion_time', models.PositiveIntegerField(default=0)),
                ('average_test_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('pass_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_ratings', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('enrollment_trend', models.JSONField(blank=True, default=list)),
                ('completion_trend', models.JSONField(blank=True, default=list)),
                ('engagement_trend', models.JSONField(blank=True, default=list)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='courses.course')),
                ('most_difficult_lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='most_difficult_in', to='courses.lesson')),
                ('most_viewed_lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='most_viewed_in', to='courses.lesson')),
            ],
            options={
                'verbose_name': 'Course Analytics',
                'verbose_name_plural': 'Course Analytics',
                'db_table': 'analytics_course_analytics',
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('path_type', models.CharField(choices=[('recommended', 'AI Recommended'), ('custom', 'Custom Created'), ('prerequisite', 'Prerequisite Path'), ('skill_based', 'Skill-Based')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('total_courses', models.PositiveIntegerField(default=0)),
                ('completed_courses', models.PositiveIntegerField(default=0)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('estimated_duration', models.PositiveIntegerField(default=0)),
                ('estimated_completion_date', models.DateField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('recommendation_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('recommendation_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Learning Path',
                'verbose_name_plural': 'Learning Paths',
                'db_table': 'analytics_learning_path',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPathItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('skipped', 'Skipped')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='analytics.learningpath')),
                ('prerequisite_items', models.ManyToManyField(blank=True, to='analytics.learningpathitem')),
            ],
            options={
                'verbose_name': 'Learning Path Item',
                'verbose_name_plural': 'Learning Path Items',
                'db_table': 'analytics_learning_path_item',
                'ordering': ['learning_path', 'order'],
                'unique_together': {('learning_path', 'course')},
            },
        ),
        migrations.AddField(
            model_name='learningpath',
            name='courses',
            field=models.ManyToManyField(related_name='learning_paths', through='analytics.LearningPathItem', to='courses.course'),
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=20)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('returning_users', models.PositiveIntegerField(default=0)),
                ('total_courses', models.PositiveIntegerField(default=0)),
                ('new_courses', models.PositiveIntegerField(default=0)),
                ('total_lessons', models.PositiveIntegerField(default=0)),
                ('total_tests', models.PositiveIntegerField(default=0)),
                ('total_enrollments', models.PositiveIntegerField(default=0)),
                ('course_completions', models.PositiveIntegerField(default=0)),
                ('test_attempts', models.PositiveIntegerField(default=0)),
                ('badges_awarded', models.PositiveIntegerField(default=0)),
                ('total_study_time', models.PositiveIntegerField(default=0)),
                ('average_session_duration', models.PositiveIntegerField(default=0)),
                ('content_consumption_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('overall_completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_test_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('user_satisfaction', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('new_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('average_revenue_per_user', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('page_load_time', models.DecimalField(decimal_places=3, default=0.0, max_digits=6)),
                ('error_rate', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('uptime_percentage', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'System Metrics',
                'verbose_name_plural': 'System Metrics',
                'db_table': 'analytics_system_metrics',
                'ordering': ['-period_start'],
                'indexes': [models.Index(fields=['period_type', 'period_start'], name='analytics_s_period__f90577_idx')],
                'unique_together': {('period_type', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='TestAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_attempts', models.PositiveIntegerField(default=0)),
                ('unique_test_takers', models.PositiveIntegerField(default=0)),
                ('completed_attempts', models.PositiveIntegerField(default=0)),
                ('average_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('highest_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('lowest_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('pass_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_completion_time', models.PositiveIntegerField(default=0)),
                ('fastest_completion', models.PositiveIntegerField(default=0)),
                ('slowest_completion', models.PositiveIntegerField(default=0)),
                ('most_difficult_question', models.JSONField(blank=True, default=dict)),
                ('easiest_question', models.JSONField(blank=True, default=dict)),
                ('question_statistics', models.JSONField(blank=True, default=list)),
                ('score_distribution', models.JSONField(blank=True, default=list)),
                ('time_distribution', models.JSONField(blank=True, default=list)),
                ('performance_trend', models.JSONField(blank=True, default=list)),
                ('attempt_trend', models.JSONField(blank=True, default=list)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='tests.test')),
            ],
            options={
                'verbose_name': 'Test Analytics',
                'verbose_name_plural': 'Test Analytics',
                'db_table': 'analytics_test_analytics',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('course_view', 'Course View'), ('lesson_view', 'Lesson View'), ('lesson_complete', 'Lesson Complete'), ('test_start', 'Test Start'), ('test_complete', 'Test Complete'), ('enrollment', 'Enrollment'), ('badge_earned', 'Badge Earned'), ('profile_update', 'Profile Update'), ('download', 'Download'), ('search', 'Search')], max_length=30)),
                ('duration', models.PositiveIntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('browser', models.CharField(blank=True, max_length=100, null=True)),
                ('os', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.lesson')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tests.test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'db_table': 'analytics_user_activity',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserLearningAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_learning_time', models.JSONField(blank=True, default=dict)),
                ('learning_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('total_courses_enrolled', models.PositiveIntegerField(default=0)),
                ('total_courses_completed', models.PositiveIntegerField(default=0)),
                ('total_lessons_viewed', models.PositiveIntegerField(default=0)),
                ('total_tests_taken', models.PositiveIntegerField(default=0)),
                ('total_learning_time', models.PositiveIntegerField(default=0)),
                ('average_session_duration', models.PositiveIntegerField(default=0)),
                ('last_learning_session', models.DateTimeField(blank=True, null=True)),
                ('average_test_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('improvement_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('login_frequency', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('content_interaction_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('learning_style_scores', models.JSONField(blank=True, default=dict)),
                ('preferred_content_types', models.JSONField(blank=True, default=list)),
                ('skill_levels', models.JSONField(blank=True, default=dict)),
                ('skill_progress', models.JSONField(blank=True, default=dict)),
                ('dropout_risk_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('next_course_recommendations', models.JSONField(blank=True, default=list)),
                ('optimal_learning_schedule', models.JSONField(blank=True, default=dict)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='learning_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Learning Analytics',
                'verbose_name_plural': 'User Learning Analytics',
                'db_table': 'analytics_user_learning_analytics',
            },
        ),
        migrations.AddIndex(
            model_name='learningpath',
            index=models.Index(fields=['user', 'status'], name='analytics_l_user_id_65e717_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'activity_type', 'timestamp'], name='analytics_u_user_id_b7adbb_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['course', 'timestamp'], name='analytics_u_course__e4e1e3_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['timestamp'], name='analytics_u_timesta_1d8413_idx'),
        ),
    ]
